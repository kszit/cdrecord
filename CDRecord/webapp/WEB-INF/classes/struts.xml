<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
    "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
    "http://struts.apache.org/dtds/struts-2.0.dtd">

<struts>
	<!-- 请求参数的编码方式 -->   
	<constant  name="struts.i18n.encoding" value="UTF-8"/>
	<!-- 指定被struts2处理的请求后缀类型。多个用逗号隔开 -->
	<constant name="struts.action.extension" value="action,do,go,xkk"/>
	<!-- 当struts.xml改动后，是否重新加载。默认值为false(生产环境下使用),开发阶段最好打开  -->
	<constant name="struts.configuration.xml.reload" value="true"/>
	<!-- 是否使用struts的开发模式。开发模式会有更多的调试信息。默认值为false(生产环境下使用),开发阶段最好打开  -->
	<constant name="struts.devMode" value="true"/>
	<!-- 设置浏览器是否缓存静态内容。默认值为true(生产环境下使用),开发阶段最好关闭  -->
	<constant name="struts.serve.static.browserCache" value="false" />
        
    <!-- 指定允许上传的文件最大字节数。默认值是2097152(2M) -->
    <constant name="struts.multipart.maxSize" value="10701096"/>
    <!-- 设置上传文件的临时文件夹,默认使用javax.servlet.context.tempdir -->
    <constant name="struts.multipart.saveDir " value="d:/tmp" />

	<!-- 是否开启动态方法调用 -->
    <constant name="struts.enable.DynamicMethodInvocation" value="true" />
    <!--
    <constant name="struts.enable.SlashesInActionNames" value="true" />
     -->
	<!-- 是否支持页面调用静态方法，默认为false  注：这个在struts2.0.*版本是默认支持调用静态方法的 -->  
    <constant name="struts.ognl.allowStaticMethodAccess" value="true"/>

    <package name="webrootpackage" namespace="/" extends="struts-default">
		
		<!-- 这里可以装配几个我们用到的拦截器/拦截器栈
		<interceptors>      
         //定义一个判断是否登陆的拦截器，在每个操作之前都要判断是否登陆
         	<interceptor name="LoginCheck" class="com.watchdata.mepay.web.interceptor.LoginCheckInterceptor"></interceptor>
		
			<interceptor-stack name="LoginAndPermissionCheckStack">
	           <interceptor-ref name="LoginCheckStack"/>
	           <interceptor-ref name="PermissionCheck"/>
	        </interceptor-stack> 
		</interceptors>
		<default-interceptor-ref name="LoginAndPermissionCheckStack"/>
		 -->
		 
        <default-action-ref name="index" />

        <global-results>
            <result name="error">/error.jsp</result>
        </global-results>

        <global-exception-mappings>
            <exception-mapping exception="java.lang.Exception" result="error"/>
        </global-exception-mappings>
        <!-- 找不到action时 返回此结果    启用此配置文件有问题，会先判定此通配符，符合就不再查看其他配置文件
	    <action name="*">
	   		<result>/example/{1}.jsp</result>
	  	</action>
 		-->
    </package>
    <!-- Add packages here -->
	<include file="struts-*.xml"></include>
</struts>
